[{"id":0,"href":"/beep/","title":"Beep","parent":"RDKit-rs","content":"Hi there intrepid hacker!\n"},{"id":1,"href":"/","title":"RDKit-rs","parent":"","content":" \nThe power and speed of RDKit, the safety of Rust! A combination of low level C++ bindings and useful high level Rust constructs so you can\n Parse mol/molblocks Normalize Fingerprint Enumerator tautomers/canonicalize  How does it work?   The rdkit-rs project provides two key libraries: rdkit and rdkit-sys. The sys package is a collection of low or zero-cost wrappers exposing a key subset of the RDKit C++ functionality. The rdkit package builds on top of the sys package, hiding pointers and providing idiomatic Rust interfaces (think: Debug and Clone implementations, smart borrowing behavior).\nWith the rdkit library you will never need to manually free memory or worry about accessing null pointers. You also get all the benefits of an optimizing compiler and will never wait for garbage collection.\nExample   in your Cargo.toml:\n[dependencies] rdkit = \u0026#34;*\u0026#34; If you satisfy the requirements below, the following code should just compile!\nuserdkit::{Properties,ROMol};pubfn main(){letmol=ROMol::from_smile(\u0026#34;c1ccccc1C(=O)NC\u0026#34;).unwrap();letproperties=Properties::new();letcomputed: HashMap\u0026lt;String,f64\u0026gt;=properties.compute_properties(\u0026amp;mol);assert_eq!(*computed.get(\u0026#34;NumAtoms\u0026#34;).unwrap(),19.0);}Browse more rdkit-rs/rdkit examples\nRequirements   We support recent stable Rust versions. The limiting factor is whatever our C++ bindings library, cxx-rs, supports. Check the cxx Cargo.toml to confirm what rust-version is supported.\nRequires a recent version of RDKit, tested against 2022.03.1. Supports both static and dynamic linking, preferring static linking. You can use a copy of RDKit installed either from Mac homebrew or Conda Forge. We are working to get Debian packages updated for the most recent RDKit and also including static libraries so we can build portable RDKit applications.\n brew install rdkit conda install -c conda-forge rdkit==2022.03.1  Ubuntu support is coming soon.\nYou will also need a compiler for building the sys package\u0026rsquo;s C++ bridge. We recommend clang for the compilation speed.\nWhy Rust?   Rust is a powerful systems level programming language, offering a smart static typing system, an integrated build system and package manager, and strong memory safety, among many other benefits. Read more about Rust in the free Rust Book.\nIssues?   Please file an issue on GitHub\n"},{"id":2,"href":"/docs/","title":"Sup","parent":"RDKit-rs","content":"Hi there\n"},{"id":3,"href":"/tags/","title":"Tags","parent":"RDKit-rs","content":""}]